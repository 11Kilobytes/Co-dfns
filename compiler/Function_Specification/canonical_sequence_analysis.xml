<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Canonical Sequence Analysis</title>
  <simpara>Canonical sequence analysis is only necessary for the Source
  Input enumeration, and will not be necessary to understand or use the
  Module invocation enumeration. There is one canonical sequence analysis
  for each of the enumerations, mapping to one or more recursive relationships.</simpara>
  <simpara>The top-level enumeration contains the following properties:</simpara>
  <xi:include href="properties/top-level.xml" />
  <xi:include href="tables/Canonical_Sequence_Analysis--_Top-level.xml"></xi:include>
  <simpara>The following analysis for the canonical sequence of Functions
  is the analysis for all Function values, including operators, monadic,
  ambivalent, and dyadic functions.</simpara>
  <xi:include href="properties/function.xml" />
  <xi:include href="tables/Canonical_Sequence_Analysis--_Functions.xml"></xi:include>
  <xi:include href="properties/expression.xml" />
  <xi:include href="tables/Canonical_Sequence_Analysis--_Expressions.xml"></xi:include>
  <simpara>Function expressions are by far the most difficult and sequence
  heavy of the enumerations. The Function Expression enumerations have
  a great deal of states because of the subtle differences in the ways
  that operators behave. Much of this is hidden in the interpreter because
  their behaviors can be encoded in the runtime environment. Since this
  does not aid a compiler, it is better to encode these semantics as
  part of the visible external behavior, and not hide it behind the semantics
  of the runtime system.</simpara>
  <simpara>Conceptually, we have situations where we just have functions,
  or functions that are the result of combining some functions or function
  expressions with operators. Operators can take axis specifications
  and some funtions may also do so. Some funtions are ambivalent, others
  dyadic, and a few are explicitly monadic in their arity. Operators
  are either dyadic or monadic, and may take either only functions, or
  sometimes function values together with array values. The following
  properties encode these behaviors.</simpara>
  <xi:include href="properties/func_expr.xml" />
  <xi:include href="tables/Canonical_Sequence_Analysis--_Function_Expressions.xml"></xi:include>
</section>
