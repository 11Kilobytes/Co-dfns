  <section xmlns="http://docbook.org/ns/docbook" version="5.0">
    <title>Element: Variable</title>
    <simpara>
      The <varname>Variable</varname> element encapsulates the
      core atomic value of a variable name of some sort.
    </simpara>
    <formalpara>
      <title>Variable contents</title>
      <para>
        There are no elements or contents belonging to a <varname>Variable</varname> element.
      </para>
    </formalpara>
    <formalpara>
      <title>Variable attributes</title>
      <para>
        The <parameter>name</parameter> attribute gives the
        literal value of the variable.  The
        <parameter>class</parameter> indicates whether it is a
        <literal>function</literal>, <literal>operator</literal>,
        or <literal>array</literal> value.  The
        <parameter>equiv</parameter> indicates what equivalent
        function, operator, or array exists to this one. In this
        case there is some leeway, and there is not always
        precision here, but we match the precision level of the
        <citetitle>Function Specification</citetitle>.  Possible
        values for the <parameter>equiv</parameter> attribute are
        as follows:
        <simplelist type="inline">
          <member><literal>Fnm</literal></member>
          <member><literal>Fn</literal></member>
          <member><literal>Fnd</literal></member>
          <member>Any function or operator primitive</member>
        </simplelist>.
	    The <parameter>slot</parameter> indicates the local memory slot of
	    a function scope that corresponds to the variable.
	    The <parameter>env</parameter> indicates the environment in which
	    the variable is located. This is a natural indicating the number of
	    scopes away from the local scope; that is, 0 is for local scope,
	    while 2 indicates that the variable is stored in the scope two levels
	    above the local scope.
	    The <parameter>depth</parameter> attribute indicates the depth
	    of a function call variable; that is, it determines the number
	    of stack frames for that call.
      </para>
    </formalpara>
  </section>
