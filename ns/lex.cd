⍝ Lift Constants
LC←{I←¯1 ⋄ mkv←{'LC',⍕I⊣(⊃I)+←1} ⋄ e l←((1⌷⍉a←⍵)∊⊂)¨ns←'Expression' 'Number'
 at←{2 2⍴'name'⍵'class'⍺} ⋄ vn←{'Variable' ''('array' at ⍵)}
 hn←1⌷⍉h←(l∨e∧1⌽l)⌿a ⋄ a[s/⍳⊃⍴a;1+⍳3]←↑vn¨v←mkv¨⍳+/s←2</0,l ⋄ a←(s∨~l)⌿a
 h[(i←{(hn∊⊂⍵)/⍳⊃⍴h})1⊃ns;0]←2 ⋄ h[i⊃ns;0 3]←1,⍪'atomic'∘at¨v ⋄ (1↑a)⍪h⍪1↓a}

⍝ Resolve Functions: Attribute scope coordinate to functions
RF←{rf←1,1↓f←(1⌷⍉⍵)∊⊂'Function' ⋄ c←(1+d)↑⍤¯1+⍀d∘.=⍳1+⌈/0,d←0⌷⍉⍵ ⋄ w←⍵
 (3⌷⍉rf⌿w)⍪←↓(⊂'coord'),⍪⍕¨↓rf⌿c ⋄ w}

⍝ Lift functions to top level after resolving
LF←{i←¯1 ⋄ mv←{'LF',⍕i⊣(⊃i)+←1} ⋄ a←↑'class' 'equiv'{⍺ ⍵}¨⊂'ambivalent'
 mn←{2 4⍴⍵'FuncExpr' ''a(⍵+1)'Variable' ''(2 2⍴'name' ⍺ 'class' 'function')}
 up←{w←⍵ ⋄ (0⌷⍉w)-←(⊃⍵)-1 ⋄ w} ⋄ s←{⍵⊂[0]⍨(⍬1⊃⍨0≠≢⍵),2≠/∨\0,1↓(⊃⍵)≥0⌷⍉⍵}
 l←(1≠d)∧(d=⌈/f/d←0⌷⍉⍵)∧f←1⌽(1⌷⍉⍵)∊⊂'Function'
 c←↑{h r←2↑s ⍵ ⋄ n←mv⍬ ⋄ (n Bind up h)(r⍪⍨n mn ⊃h)}¨l⊂[0]⍵
 (1↑⍵)⍪(⊃⍪/(⊂MtAST),⊣/c)⍪(1↓⍵⌿⍨~∨\l)⍪⊃⍪/(⊂MtAST),⊢/c}

⍝ Flatten Expressions
FE←{ren←{0=≢w←⍵:⍵ ⋄ (0 3⌷w)←⊂(1,⍨~(0⌷⍉a)∊⊂'name')⌿(a←⊃0 3⌷⍵)⍪'name'⍺ ⋄ w}
 mv←{(1+⍺)'Expression' ''(⍉⍪'class' 'atomic')⍪⍉⍪(2+⍺)'Variable' ''(⍉⍪'name'⍵)}
 lf←{m←(⊃⍵)≥0⌷⍉⍵ ⋄ dn←⍉⍪0'' ''(1 2⍴'name' 'res')
  n←(⊃'name'Prop⊢)¨1↓{(≢n)⊃1↑¨⍺ ⍵⊣n←'name'Prop 1↑⍵}\(⊂dn),p←(⊃m⊂⍺)⊂[0]⊃k←m⊂[0]⍵
  ⊃⍪/(1↓k),⍨⌽((¯1↓b)⍪¨(⊃⍵)mv¨1↓n),¯1↑b←n((⊃⍵){⍺ ren w⊣w[;0]-←⍺⍺-⍨⊃⍵⊣w←⍵})¨p}
 md←(e\('class'Prop e⌿⍵)∊'monadic' 'dyadic')∧e←(1⌷⍉⍵)∊⊂'Expression'
 re←(¯3⌽(1⌷⍉⍵)∊⊂'Condition')∨e∧d=(⊢+⊣×0=⊢)\(e∧1=d←0⌷⍉⍵)+3×(1⌷⍉⍵)∊⊂'Function'
 ⊃⍪/(⊂(e⍳1)↑⍵),lf⌿↑re∘(⊂[0])¨(md∨re)⍵}

⍝ Anchor Variables
AV←{w←⊃⍪/((~m)/w),(m←t/t∧(1⌷⍉⍵)∊⊂'FuncExpr')/w←⍵⊂[0]⍨t←1,1↓1=0⌷⍉⍵
 sb←(k←+\1⌽(1⌷⍉w)∊⊂'Function'){'name'Prop ⍵⌿⍨(1⌷⍉⍵)∊⊂'Expression'}⌸w
 sk←↑,∘⍎¨(gc←'coord'∘Prop) w ⋄ gn←'name'∘Prop
 a←{b←sb[sk⍳{k[⍒k;]⊣k←↑(↓sk)∩(≢⍵)↑¨(1+⍳⍵⍳0)↑¨⊂⍵},⍎⊃gc ⍵;] ⋄ s←⍴b ⋄ b←,b ⋄ w←⍵
  v←(~v\(gn v⌿⍵)∊,¨'⍺⍵')∧(v\(1⌷⍉(1⌽v)⌿⍵)∊⊂'Expression')∧v←(1⌷⍉⍵)∊⊂'Variable'
  (3⌷⍉v⌿w)⍪←'env' 'slot'∘{⍺,⍪⍕¨2↑⍵}¨↓⍉s⊤b⍳gn v⌿⍵ ⋄ ⊂w}
 ⊃⍪/k a⌸w}

