:Namespace cdf_prim

⍝ Basic system functions
q_signal←'q_signal_ibeam'⌶
q_dr←'q_dr_ibeam'⌶

⍝ Core base primitives
eqv←'eqv_ibeam'⌶

⍝ Shape utilities
rnk_eqv←'rnk_eqv_ibeam'⌶
shp_eqv←'shp_eqv_ibeam'⌶
is_empty←'is_empty_ibeam'⌶
count←'count_ibeam'⌶

⍝ Depth utilities
is_simple←'is_simple_ibeam'⌶

⍝ Array Utilities
elem←'elem_ibeam'⌶
eptr←'eptr_ibeam'⌶
incr←'incr_ibeam'⌶
shaped←'shaped_ibeam'⌶
store←'store_ibeam'⌶
squeeze←'squeeze_ibeam'⌶
is_bound←'is_bound_ibeam'⌶

⍝ Scalar Helpers
can_ext_by←'can_ext_by_ibeam'⌶

ambiv←{is_bound ⍺:⍺ ⍵⍵ ⍵ ⋄ ⍺⍺ ⍵}

chk_ext_scl←{
	⍺ shp_eqv ⍵:⍺ ⍵
	⍺ can_ext_by ⍵:(⍵ shaped ⍺)⍵
	⍵ can_ext_by ⍺:⍺(⍺ shaped ⍵)
	⍺ rnk_eqv ⍵:⎕SIGNAL 5
	⎕SIGNAL 4
}

elem_map←{
	z←⍺ shaped ⊂⍬ ⋄ x←⍺ ⋄ y←⍵ ⋄ fn←⍺⍺ ⋄ cnt←count x
	_←cnt{⍺≡⍵:⍬ ⋄ ⍺ ∇ incr ⍵⊣(z eptr ⍵)store(x elem ⍵)fn y elem ⍵}0
	squeeze z
}

scalar←{
	xy←⍺ chk_ext_scl ⍵ ⋄ x←xy elem 0 ⋄ y←xy elem 1
	is_empty x:x shaped ⍵⍵ ⍬
	x{is_simple ⍺:is_simple ⍵ ⋄ 0}y:x ⍺⍺ y
	x(∇ elem_map)y
}

⍝ +: Conjugate | Addition
conjugate←{
	1289=⎕DR ⍵:'conjugate_vec'⌶ ⍵
	⍵
}

add←conjugate ambiv ('add_vec'⌶ scalar {0})

⍝ ⊢: Right
rgt←{⍵}

⍝ ⊣: Left
lft←{⍺}

⍝ =: Equal
eql←'eql_vec'⌶ scalar {1}

⍝ ⊂: Enclose/Partition
enclose←'enclose_ibeam'⌶
par←enclose ambiv {⎕SIGNAL 16}

:EndNamespace
