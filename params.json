{"name":"Co-dfns","tagline":"High-performance, Reliable, and Parallel APL","body":"# Co-dfns Compiler\r\n\r\nThe Co-dfns project aims to provide a high-performance, high-reliability\r\ncompiler for a parallel extension of the Dyalog dfns programming language.\r\nThe dfns language is a functionally oriented, lexically scoped dialect of\r\nAPL. The Co-dfns language extends the dfns language to include explicit task\r\nparallelism with implicit structures for synchronization and determinism. The\r\nlanguage is designed to enable rigorous formal analysis of programs to aid\r\nin compiler optimization and programmer productivity, as well as in the\r\ngeneral reliability of the code itself.\r\n\r\nOur mission is to deliver scalable APL programming to information and domain\r\nexperts across many fields, expanding the scope and capabilities of what\r\nyou can effectively accomplish with APL.\r\n\r\n## Supporting the Project\r\n\r\nWe need your help! Please contact <arcfide@sacrideo.us> to learn how you\r\ncan support the project.\r\n\r\n## Obtaining the official Distribution\r\n\r\nThere are two ways to get the Co-dfns compiler. You can download the source \r\ndirectly from GitHub \r\n[[.zip](https://github.com/arcfide/Co-dfns/zipball/master)]\r\n[[tar.gz](https://github.com/arcfide/Co-dfns/tarball/master)]. This requires \r\nthe `noweb` program to weave and tangle the sources into something usable. \r\n\r\nAlternatively, the pre-prepared distribution is available through BT Sync and \r\nincludes the complete Co-dfns program in PDF (woven) form and a tangled \r\n`codfns.dyalog` file and its associated utility files for use. \r\n\r\n[Official Co-dfns Distribution](https://link.getsync.com/#f=Co-dfns%20Distribution&sz=0&t=1&s=UJL5Y6DONSWMZ6KVKVV2J5VXC73J3CM5&i=CI3NEENAIZOAGZ4RKB75OLS2IKRS7QLUZ&v=2.3)\r\n\r\nThis distribution is released as a rolling release with all of the latest \r\nupdates and information. If you want to use Co-dfns, it is recommended that \r\nyou obtain and track the distribution. if you want to hack on the compiler \r\nitself, you should work through the Git repository. \r\n\r\nThe official distribution requires no additional tools to prepare and use other \r\nthan the core compiler requirements, and thus, can be considered a sort of \r\n\"binary\" form. \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}