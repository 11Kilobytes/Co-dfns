rth←'#include <time.h>',nl
rth,←'#include <stdint.h>',nl
rth,←'#include <inttypes.h>',nl
rth,←'#include <limits.h>',nl
rth,←'#include <float.h>',nl
rth,←'#include <math.h>',nl
rth,←'#include <memory>',nl
rth,←'#include <algorithm>',nl
rth,←'#include <string>',nl
rth,←'#include <unordered_map>',nl
rth,←'#include <arrayfire.h>',nl
rth,←'using namespace af;',nl
rth,←nl
rth,←'#ifdef _WIN32',nl,'#define EXPORT extern "C" __declspec(dllexport)',nl
rth,←'#elif defined(__GNUC__)',nl
rth,←'#define EXPORT extern "C" __attribute__ ((visibility ("default")))',nl
rth,←'#else',nl,'#define EXPORT extern "C"',nl,'#endif',nl
rth,←'#ifdef _MSC_VER',nl,'#define RSTCT __restrict',nl
rth,←'#else',nl,'#define RSTCT restrict',nl,'#endif',nl
rth,←'#define S struct',nl
rth,←'#define Z static',nl
rth,←'#define R return',nl
rth,←'#define RANK(lp) ((lp)->p->r)',nl
rth,←'#define TYPE(lp) ((lp)->p->t)',nl
rth,←'#define SHAPE(lp) ((lp)->p->s)',nl
rth,←'#define ETYPE(lp) ((lp)->p->e)',nl
rth,←'#define DATA(lp) ((V*)&SHAPE(lp)[RANK(lp)])',nl
rth,←'#define CS(n,x) case n:x;break;',nl
rth,←'#define DO(n,x) {I i=0,_i=(n);for(;i<_i;++i){x;}}',nl
rth,←'#define DOB(n,x) {B i=0,_i=(n);for(;i<_i;++i){x;}}',nl
rth,←nl
rth,←'typedef enum{APLNC=0,APLU8,APLTI,APLSI,APLI,APLD}APLTYPE;',nl
rth,←'typedef long long L;typedef int I;typedef int16_t S16;',nl
rth,←'typedef int8_t S8;typedef double D;typedef unsigned char U8;',nl
rth,←'typedef dim_t B;typedef unsigned U;typedef void V;',nl
rth,←'typedef std::string STR;',nl
rth,←'S lp{S{L l;B c;U t:4;U r:4;U e:4;U _:13;U _1:16;U _2:16;B s[1];}*p;};',nl
rth,←'S dwa{B sz;',nl
rth,←' S{B sz;V*(*ga)(U,U,B*,S lp*);V(*na[5])(V);V(*er)(U);}*ws;',nl
rth,←' V*na[4];};',nl
rth,←'S dwa*dwafns;Z V err(U n){dwafns->ws->er(n);}',nl
rth,←'EXPORT I DyalogGetInterpreterFunctions(dwa*p){',nl
rth,←' if(p)dwafns=p;else R 0;',nl
rth,←' if(dwafns->sz<sizeof(S dwa))R 16;R 0;}',nl
rth,←nl