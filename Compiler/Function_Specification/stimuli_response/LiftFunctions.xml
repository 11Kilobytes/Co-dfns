<?xml version="1.0" encoding="utf-8" ?>

<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Lift Functions</title>
  <para>
    The <function>Lift Functions</function> component takes in the AST delivered by 
    <function>Lift Constants</function> and flattens out function definitions by 
    lifting all nested or internal function definitions to the top level. 
  </para>
  <table frame="void" rules="rows">
    <caption>Stimuli for LiftFunctions</caption>
    <thead>
      <tr>
        <th>Symbol</th>
        <th colspan="2">Name</th>
        <th colspan="4">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>Fin</td>
        <td colspan="2">Literal Expression</td>
        <td colspan="4">
          Some literal atomic expression such as an array of numbers or a string
        </td>
      </tr>
      <tr>
        <td>Fout</td>
        <td colspan="2">Some Other node</td>
        <td colspan="4">
          Any other node
        </td>
      </tr>
      <tr>
        <td>Fv</td>
        <td colspan="2">Free variable</td>
        <td colspan="4">
          A free variable reference within a function definition
        </td>
      </tr>
      <tr>
        <td>O</td>
        <td colspan="2">Some Other node</td>
        <td colspan="4">
          Any other node
        </td>
      </tr>
    </tbody>
  </table>
  <para>
    The responses in part for lifting functions feeds back into the stimuli, though 
    that will be detailed further in the actual enumeration. We need a way to save 
    stacks that we are working on when lifting functions, and to ensure that the 
    nodes come out in the right order, which we do with some specific responses which 
    allow us to save the data and have it fed back into our component before being 
    output.
  </para>
  <table frame="void" rules="rows">
    <caption>Responses for LiftFunctions</caption>
    <thead>
      <tr>
        <th>Symbol</th>
        <th colspan="4">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>Save</td>
        <td colspan="4">
          Save the nodes sent so far for further processing later, saved as a 
          stack, so that saves can be restored in a LIFO order
        </td>
      </tr>
      <tr>
        <td>Restore</td>
        <td colspan="4">
          Start feeding back in the nodes that were at the top of the save stack 
          to be processed again, current depth is restored to the depth of the nodes 
          given in the restoration
        </td>
      </tr>
      <tr>
        <td>Send</td>
        <td colspan="4">
          Send the nodes that have been queued to complete the transaction and make 
          them a permanent part of the output stream
        </td>
      </tr>
      <tr>
        <td>Resolve</td>
        <td colspan="4">
          Resolve the current free variable to identify it's slot and environment
        </td>
      </tr>
      <tr>
        <td>Gensym</td>
        <td colspan="4">
          Generate a new variable node referencing a function
        </td>
      </tr>
      <tr>
        <td>Top</td>
        <td colspan="4">Begin sending at the top-level depth</td>
      </tr>
      <tr>
        <td>Bind</td>
        <td colspan="4">A new binding to a function definition</td>
      </tr>
      <tr>
        <td>Id</td>
        <td colspan="4">
          Pass through node, representing the current node 
          in question
        </td>
      </tr>
    </tbody>
  </table>
</section>