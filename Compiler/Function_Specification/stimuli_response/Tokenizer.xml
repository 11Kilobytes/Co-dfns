<?xml version="1.0" encoding="utf-8" ?>

<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Tokenizer</title>
  <para>
    The Tokenizer takes a string sequence and converts it into something more, 
    namely, a sequence of tokens with some of the unnecessary elements eliminated.
    It remains simple, and does not do any sort of semantic analysis, but simply 
    converts characters into tokens. Every character in a Co-dfns program 
    maps to one of the following stimuli.
  </para>
  <table frame="void" rules="rows">
    <caption>Stimuli for Tokenizer</caption>
    <thead>
      <tr>
        <th>Symbol</th>
        <th colspan="2">Name</th>
        <th colspan="4">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>T</td>
        <td colspan="2">Self-tokens</td>
        <td colspan="4">
          Tokens which are units in and of themselves, such as primitives
          and delimiters
        </td>
      </tr>
      <tr>
        <td>A</td>
        <td colspan="2">Alphabetc character</td>
        <td colspan="4">
          An alphabetic character which is a valid character to appear in a 
          variable name, excepting the character <literal>E</literal>
        </td>
      </tr>
      <tr>
        <td>E</td>
        <td colspan="2"><literal>E</literal> character</td>
        <td colspan="4">
          Either a lower-case or upper-case <literal>E</literal>
        </td>
      </tr>
      <tr>
        <td>0</td>
        <td colspan="2">Digit</td>
        <td colspan="4">
          A numeric digit 0 through 9
        </td>
      </tr>
      <tr>
        <td>W</td>
        <td colspan="2">Unsemantic Whitespace</td>
        <td colspan="4">
          Whitespace which is not relevant to the semantics of the program except as a 
          delimiter
        </td>
      </tr>
      <tr>
        <td>N</td>
        <td colspan="2">New line character(s)</td>
        <td colspan="4">A new line character LF</td>
      </tr>
      <tr>
        <td>.</td>
        <td colspan="2">Dot</td>
        <td colspan="4">
          The period or dot character
        </td>
      </tr>
      <tr>
        <td><literal>¯</literal></td>
        <td colspan="2">High-minus</td>
        <td colspan="4">
          The high-minus character for negative numbers
        </td>
      </tr>
      <tr>
        <td><literal>⍝</literal></td>
        <td colspan="2">Comment</td>
        <td colspan="4">
          The line comment symbol
        </td>
      </tr>
      <tr>
        <td><literal>⍬</literal></td>
        <td colspan="2">EOT</td>
        <td colspan="4">
          The end of transmission indicator
        </td>
      </tr>
      <tr>
        <td>:</td>
        <td colspan="2">Colon</td>
        <td colspan="4">
          The colon character
        </td>
      </tr>
      <tr>
        <td><literal>'</literal></td>
        <td colspan="2">Quote</td>
        <td colspan="4">
          The quote character
        </td>
      </tr>
      <tr>
        <td>K</td>
        <td colspan="2">Keyword</td>
        <td colspan="4">
          A valid keyword; 
          <simplelist type="inline">
            <member><literal>:Namespace</literal></member>
            <member><literal>:EndNamespace</literal></member>
          </simplelist>
        </td>
      </tr>
      <tr>
        <td>M</td>
        <td colspan="2">Miscellaneous</td>
        <td colspan="4">
          Any other character which does not fit within these other stimuli classes
        </td>
      </tr>
    </tbody>
  </table>
  <para>
    The set of responses for the tokenizer map almost directly to the set of stimuli that 
    are inputs into the ResolveVars component. These abstract away the details of 
    handling character data.
  </para>
  <table frame="void" rules="rows">
    <caption>Responses for Tokenizer</caption>
    <thead>
      <tr>
        <th>Name</th>
        <th colspan="4">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>Token</td>
        <td colspan="4">An encapsulation of the tokens which are delimiters in and of themselves</td>
      </tr>
      <tr>
        <td>Variable</td>
        <td colspan="4">A variable name</td>
      </tr>
      <tr>
        <td>Keyword</td>
        <td colspan="4">A colon-prefixed keyword</td>
      </tr>
      <tr>
        <td>Number</td>
        <td colspan="4">A numeric value</td>
      </tr>
      <tr>
        <td>String</td>
        <td colspan="4">A string value</td>
      </tr>
      <tr>
        <td>Syntax Error</td>
        <td colspan="4">Indicates a syntactically bad program; implied termination</td>
      </tr>
      <tr>
        <td>Eot</td>
        <td colspan="4">Indicates a successful run and the end of the transmission</td>
      </tr>
    </tbody>
  </table>
</section>