⍝ respos←'fmod((double)⍵,(double)⍺)'
respos←'fmod((double)⍵,(double)⍺)'
resneg←'⍵-⍺*floor(((double)⍵)/(double)(⍺+(0==⍺)))'
residue←'(0<=⍺&&0<=⍵)?',respos,':',resneg

⍝ Scalar Primitives
sdb←0 3⍴⊂'' ⋄ scl←{cln ((≢⍵)↑,¨'⍵⍺')⎕R(⍕¨⍵) ⊃⍺⌷⍨((⊂⍺⍺)⍳⍨0⌷⍉⍺),≢⍵}
⍝      Prim  Monadic            Dyadic
⍝ ────────────────────────────────────────────────────────────────
sdb⍪←,¨'+'   '⍵'                '⍺+⍵'
sdb⍪←,¨'-'   '-1*⍵'             '⍺-⍵'
sdb⍪←,¨'×'   '(⍵>0)-(⍵<0)'      '⍺*⍵'
sdb⍪←,¨'÷'   '1.0/⍵'            '((double)⍺)/((double)⍵)'
sdb⍪←,¨'*'   'exp((double)⍵)'   'pow((double)⍺,(double)⍵)'
sdb⍪←,¨'⍟'   'log((double)⍵)'   'log((double)⍵)/log((double)⍺)'
sdb⍪←,¨'|'   'fabs(⍵)'          residue
sdb⍪←,¨'○'   'PI*⍵'             'error(16)'
sdb⍪←,¨'⌊'   'floor((double)⍵)' '⍺ < ⍵ ? ⍺ : ⍵'
sdb⍪←,¨'⌈'   'ceil((double)⍵)'  '⍺ > ⍵ ? ⍺ : ⍵'
sdb⍪←,¨'<'   'error(99)'        '⍺<⍵'
sdb⍪←,¨'≤'   'error(99)'        '⍺<=⍵'
sdb⍪←,¨'='   'error(99)'        '⍺==⍵'
sdb⍪←,¨'≥'   'error(99)'        '⍺>=⍵'
sdb⍪←,¨'>'   'error(99)'        '⍺>⍵'
sdb⍪←,¨'≠'   'error(99)'        '⍺!=⍵'
sdb⍪←,¨'~'   '0==⍵'             'error(16)'
sdb⍪←,¨'∧'   'error(99)'        '⍺ && ⍵'
sdb⍪←,¨'∨'   'error(99)'        '⍺ || ⍵'
sdb⍪←,¨'⍲'   'error(99)'        '!(⍺ && ⍵)'
sdb⍪←,¨'⍱'   'error(99)'        '!(⍺ || ⍵)'
sdb⍪←,¨'⌷'   '⍵'                'error(99)'
sdb⍪←'⎕XOR'  'error(99)'        '⍺ ^ ⍵'

⍝ Operators
odb←0 3⍴⊂'' ⋄ ocl←{⍵∘{'(',(opl ⍺),⍵,' ⍵⍵)'}¨1↓⍺⌷⍨(0⌷⍉⍺)⍳⊂⍺⍺}
opl←{⊃,/{'(,''',⍵,''')'}¨⍵}
  
⍝      Prim  Monadic                  Dyadic
⍝ ─────────────────────────────────────────────────────────────────
odb⍪←,¨'⍨'   'comm'                   'comd'
odb⍪←,¨'¨'   'eacm'                   'eacd'
odb⍪←,¨'/'   'redm'                   'redd'
odb⍪←,¨'⌿'   'rd1m'                   'rd1d'
odb⍪←,¨'\'   'scnm'                   '{_←⍺⍺ ⍵⍵ ⋄ ⎕SIGNAL 16}'
odb⍪←,¨'⍀'   'sc1m'                   '{_←⍺⍺ ⍵⍵ ⋄ ⎕SIGNAL 16}'
odb⍪←'∘.'    '{_←⍺⍺ ⍵⍵ ⋄ ⎕SIGNAL 99}' 'oupd'
