<glosslist xmlns="http://docbook.org/ns/docbook" version="5.0">
  <title>Tasks</title>
  <glossentry>
    <glossterm>Task 1</glossterm>
    <glossdef>
      <formalpara>
        <title>Verify the correctness of the software increment using 
        mathematically based verification techniques</title>
        <para>
          Verify the correctness of every specification and design
          structure in the <citetitle>Increment Design</citetitle>.
        </para>
      </formalpara>
      <para>
        Carry out verbal proofs of correctness based on function-theoretic
        techniques in team verification reviews. A consensus of team members 
        is required to establish correctness.
      </para>
      <para>
        For black box verification, determine the completeness,
        consistency, and correctness of its specification.
      </para>
      <para>
        For state box verification, compare state box behavior to 
        corresponding black box behavior for equivalence.
      </para>
      <para>
        For clear box verification, apply the Correctness 
        Conditions of the Correctness Theorem to determine the 
        correctness of every control structure (including embedded black
        box specifications) with respect to its intended function.
      </para>
    </glossdef>
  </glossentry>
  <glossentry>
    <glossterm>Task 2</glossterm>
    <glossdef>
      <formalpara>
        <title>Document findings of team verification reviews</title>
        <para>
          Create an <citetitle>Increment Verification Report</citetitle>
          that documents all faults, problems, and improvements identified in 
          verification reviews, and assign corrective actions.
        </para>
      </formalpara>
    </glossdef>
  </glossentry>
  <glossentry>
    <glossterm>Task 3</glossterm>
    <glossdef>
      <formalpara>
        <title>Create written proofs of correctness as necessary for 
        critical software</title>
        <para>
          Develop written proofs of correctness as necessary for 
          life-, mission-, and enterprise-critical software, and verify the 
          proofs in team reviews.
        </para>
      </formalpara>
      <para>
        Document the proofs in the <citetitle>Increment Design</citetitle>
        work product.
      </para>
    </glossdef>
  </glossentry>
  <glossentry>
    <glossterm>Task 4</glossterm>
    <glossdef>
      <formalpara>
        <title>Reverify all corrections to faults</title>
        <para>
          Perform reverification reviews on corrections to faults,
          including reverification of the full context of corrections to
          avoid unforeseen side effects.
        </para>
      </formalpara>
    </glossdef>
  </glossentry>
</glosslist>
