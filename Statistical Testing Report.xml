<?xml version="1.0" encoding="utf-8" ?>

<article xmlns="http://docbook.org/ns/docbook" version="5.0">
  <info>
    <author>Aaron W. Hsu</author>
    <date>Monday, October 7th, 2013</date>
  </info>
  <section>
    <title>Co-Dfns Statistical Testing Report</title>
    <section>
      <title>Increment 1</title>
      <informaltable frame="void" rules="rows">
        <thead>
          <tr>
            <th>Iteration</th>
            <th>Test #</th>
            <th>Result</th>
            <th colspan="5">Failure Summary</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>1</td>
            <td>1</td>
            <td>Fail</td>
            <td colspan="5">Invalid FFI return type specifier</td>
          </tr>
          <tr>
            <td>2</td>
            <td>1</td>
            <td>Fail</td>
            <td colspan="5">Missing definition/function</td>
          </tr>
          <tr>
            <td>3</td>
            <td>1</td>
            <td>Fail</td>
            <td colspan="5">Length Error due to zero-length scan</td>
          </tr>
          <tr>
            <td>4</td>
            <td>1</td>
            <td>Fail</td>
            <td colspan="5">Token returns the wrong shaped result</td>
          </tr>
          <tr>
            <td>5</td>
            <td>1</td>
            <td>Fail</td>
            <td colspan="5">Missing Assignment</td>
          </tr>
          <tr>
            <td>6</td>
            <td>1</td>
            <td>Fail</td>
            <td colspan="5">Incorrect identification of comment location</td>
          </tr>
          <tr>
            <td>7</td>
            <td>1</td>
            <td>Fail</td>
            <td colspan="5">Token splitting by spaces fails</td>
          </tr>
          <tr>
            <td>8</td>
            <td>1</td>
            <td>Fail</td>
            <td colspan="5">Domain error when tokenizing</td>
          </tr>
          <tr>
            <td>9</td>
            <td>1</td>
            <td>Pass</td>
            <td colspan="5"></td>
          </tr>
          <tr>
            <td>9</td>
            <td>2</td>
            <td>Pass</td>
            <td colspan="5"></td>
          </tr>
          <tr>
            <td>9</td>
            <td>3</td>
            <td>Pass</td>
            <td colspan="5"></td>
          </tr>
          <tr>
            <td>9</td>
            <td>4</td>
            <td>Pass</td>
            <td colspan="5"></td>
          </tr>
          <tr>
            <td>9</td>
            <td>5</td>
            <td>Pass</td>
            <td colspan="5"></td>
          </tr>
          <tr>
            <td>9</td>
            <td>6</td>
            <td>Pass</td>
            <td colspan="5"></td>
          </tr>
          <tr>
            <td>9</td>
            <td>7</td>
            <td>Pass</td>
            <td colspan="5"></td>
          </tr>
          <tr>
            <td>9</td>
            <td>8</td>
            <td>Fail</td>
            <td colspan="5">Incorrect Syntax Error</td>
          </tr>
          <tr>
            <td>10</td>
            <td>1</td>
            <td>Fail</td>
            <td colspan="5">Rank error in return from Parse</td>
          </tr>
          <tr>
            <td>11</td>
            <td>1</td>
            <td>Pass</td>
            <td colspan="5"></td>
          </tr>
          <tr>
            <td>11</td>
            <td>2</td>
            <td>Pass</td>
            <td colspan="5"></td>
          </tr>
          <tr>
            <td>11</td>
            <td>3</td>
            <td>Pass</td>
            <td colspan="5"></td>
          </tr>
          <tr>
            <td>11</td>
            <td>4</td>
            <td>Pass</td>
            <td colspan="5"></td>
          </tr>
          <tr>
            <td>11</td>
            <td>5</td>
            <td>Fail</td>
            <td colspan="5">Accepts invalid input</td>
          </tr>
          <tr>
            <td>12</td>
            <td>1</td>
            <td>Pass</td>
            <td colspan="5"></td>
          </tr>
          <tr>
            <td>12</td>
            <td>2</td>
            <td>Pass</td>
            <td colspan="5"></td>
          </tr>
          <tr>
            <td>12</td>
            <td>3</td>
            <td>Pass</td>
            <td colspan="5"></td>
          </tr>
          <tr>
            <td>12</td>
            <td>4</td>
            <td>Pass</td>
            <td colspan="5"></td>
          </tr>
          <tr>
            <td>12</td>
            <td>5</td>
            <td>Pass</td>
            <td colspan="5"></td>
          </tr>
          <tr>
            <td>12</td>
            <td>6</td>
            <td>Pass</td>
            <td colspan="5"></td>
          </tr>
          <tr>
            <td>12</td>
            <td>7</td>
            <td>Pass</td>
            <td colspan="5"></td>
          </tr>
          <tr>
            <td>12</td>
            <td>8</td>
            <td>Pass</td>
            <td colspan="5"></td>
          </tr>
          <tr>
            <td>12</td>
            <td>9</td>
            <td>Pass</td>
            <td colspan="5"></td>
          </tr>
          <tr>
            <td>12</td>
            <td>10</td>
            <td>Pass</td>
            <td colspan="5"></td>
          </tr>
          <tr>
            <td>12</td>
            <td>11</td>
            <td>Pass</td>
            <td colspan="5"></td>
          </tr>
          <tr>
            <td>12</td>
            <td>12</td>
            <td>Pass</td>
            <td colspan="5"></td>
          </tr>
          <tr>
            <td>12</td>
            <td>13</td>
            <td>Pass</td>
            <td colspan="5"></td>
          </tr>
          <tr>
            <td>12</td>
            <td>14</td>
            <td>Pass</td>
            <td colspan="5"></td>
          </tr>
          <tr>
            <td>12</td>
            <td>15</td>
            <td>Pass</td>
            <td colspan="5"></td>
          </tr>
          <tr>
            <td>12</td>
            <td>16</td>
            <td>Pass</td>
            <td colspan="5"></td>
          </tr>
          <tr>
            <td>12</td>
            <td>17</td>
            <td>Pass</td>
            <td colspan="5"></td>
          </tr>
          <tr>
            <td>12</td>
            <td>18</td>
            <td>Pass</td>
            <td colspan="5"></td>
          </tr>
          <tr>
            <td>12</td>
            <td>19</td>
            <td>Pass</td>
            <td colspan="5"></td>
          </tr>
          <tr>
            <td>12</td>
            <td>20</td>
            <td>Pass</td>
            <td colspan="5"></td>
          </tr>
          <tr>
            <td>12</td>
            <td>21</td>
            <td>Pass</td>
            <td colspan="5"></td>
          </tr>
          <tr>
            <td>12</td>
            <td>22</td>
            <td>Pass</td>
            <td colspan="5"></td>
          </tr>
          <tr>
            <td>12</td>
            <td>23</td>
            <td>Pass</td>
            <td colspan="5"></td>
          </tr>
          <tr>
            <td>12</td>
            <td>24</td>
            <td>Pass</td>
            <td colspan="5"></td>
          </tr>
          <tr>
            <td>12</td>
            <td>25</td>
            <td>Pass</td>
            <td colspan="5"></td>
          </tr>
          <tr>
            <td>12</td>
            <td>26</td>
            <td>Pass</td>
            <td colspan="5"></td>
          </tr>
          <tr>
            <td>12</td>
            <td>27</td>
            <td>Pass</td>
            <td colspan="5"></td>
          </tr>
          <tr>
            <td>12</td>
            <td>28</td>
            <td>Pass</td>
            <td colspan="5"></td>
          </tr>
          <tr>
            <td>12</td>
            <td>29</td>
            <td>Pass</td>
            <td colspan="5"></td>
          </tr>
        </tbody>
      </informaltable>
      <formalpara>
        <title>Iteration 1, Test Case 1</title>
        <para>
          This case fails with the following error:
        </para>
      </formalpara>
      <programlisting>      'Test.ll'CoDfns.Fix ':EndNamespace' ':EndNamespace' '' ''
DOMAIN ERROR: Bad parameter specification: \
    ⎕NA errored at int - invalid specification
FFI∆INIT[4] 'PrintModuleToFile'⎕NA'int \
    CoDfns|PrintModuleToFile P &lt;0C &gt;P'</programlisting>
      <simpara>
        Diagnosis of this error is self evident.
      </simpara>
      <formalpara>
        <title>Iteration 2, Test Case 1</title>
        <para>
          The <function>ValidateInput</function> function is undefined.
        </para>
      </formalpara>
      <formalpara>
        <title>Iteration 3, Test Case 1</title>
        <para>
          The <function>Tokenize</function> fails due to a length error when splitting 
          comments and code. This occurs because of the scan used with a zero length 
          string. In this case, the scan always gives back a one element result, while it 
          is clear that the intent was to return an empty array in this case.
        </para>
      </formalpara>
      <formalpara>
        <title>Iteration 4, Test Case 1</title>
        <para>
          The <function>Tokenize</function> does not return a proper structure. It is 
          instead severely mishapen.
        </para>
      </formalpara>
      <formalpara>
        <title>Iteration 5, Test Case 1</title>
        <para>
          The <function>Tokenize</function> returns before finishing the code because 
          of a missing assignment statement.
        </para>
      </formalpara>
      <formalpara>
        <title>Iteration 6, Test Case 1</title>
        <para>
          The <function>Tokenize</function> fails to correctly identify the location 
          of comments.
        </para>
      </formalpara>
      <formalpara>
        <title>Iteration 7, Test Case 1</title>
        <para>
          The <function>Tokenize</function> fails to correctly split tokens on spaces.
        </para>
      </formalpara>
      <formalpara>
        <title>Iteration 8, Test Case 1</title>
        <para>
          The <function>Tokenize</function> fails with a domain error when trying to 
          wrap tokens around everything.
        </para>
      </formalpara>
      <formalpara>
        <title>Iteration 9, Test Case 8</title>
        <para>
          The <function>Parse</function> gives an incorrect Syntax error on valid 
          input.
        </para>
      </formalpara>
      <formalpara>
        <title>Iteration 10, Test Case 1</title>
        <para>
          The <function>Parse</function> does not return the names array.
        </para>
      </formalpara>
      <formalpara>
        <title>Iteration 11, Test Case 5</title>
        <para>
          The <function>Parse</function> accepts more than one Nss and Nse 
          stimuli in a namespace script.
        </para>
      </formalpara>
    </section>
  </section>
</article>
