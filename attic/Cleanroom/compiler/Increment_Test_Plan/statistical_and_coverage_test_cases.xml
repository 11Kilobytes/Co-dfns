  <section xmlns="http://docbook.org/ns/docbook" version="5.0">
    <title>Statistical and Coverage Test Cases</title>
    <simpara>
      The statistical test cases are located in the
      <varname>Tests</varname> variable in the
      <filename>Certification.dws</filename> workspace. This is a
      rank-3 array whose first access is the use case, second the
      increment, and third the test case number. Test cases are
      represented as input to the <function>âŽ•FIX</function> function.
      The coverage test cases are located in the
      <varname>CTests</varname> variable in the same workspace. This
      is a vector whose elements correspond to the test suites for
      coverage testing for each increment. Each element is a vector of
      tests where each test matches the format used for the
      Statistical test cases. 
    </simpara>
    <simpara>
      For each Increment, these test cases are generated using the
      following functions. The
      <function>Generate.Distribution</function> function generates
      the statistical test cases based off a model. The
      <function>Generate.Coverage</function> function generate the
      coverage tests based on a coverage model, which is the same as a
      distribution model except that it also has states in the set of
      data. See the <filename>Generate.dyalog</filename> namespace
      script for details about how these files work. Similarly, the
      models are generated by the functions
      <function>DModel</function> and <function>CModel</function> in
      the <classname>Generate</classname> namespace script. These are
      the correct functions to use to obtain valid models for input
      into either of the test generating functions.
    </simpara>
    <simpara>
      The generators for the test cases generate sequences for each
      test, and these must be expanded into real test cases. The
      function <function>Stimuli.Expand</function> found in the
      <classname>Stimuli</classname> namespace script serves this
      purpose, and expands a single sequence. See the
      <filename>Stimuli.dyalog</filename> script for the details on
      how to correctly invoke the <function>Expand</function>
      function. In practice, the correct function to call is actually
      the <function>RstExp</function> function, which will make sure
      that the variable counters are correctly reset and such. The
      <function>RstExp</function> is really just a wrapper on the
      <function>Expand</function> function, however.
    </simpara>
    <simpara>
      Generally speaking, anyone who is working on generating the test
      cases or working with testing of the compiler should examine the
      two namespace mentioned above in their script form. While not
      documented explicitly here, they are fairly short and represent
      the set of utilities that serve the primary purpose of
      manipulating tests and test cases, including, mostly, their
      generation. 
    </simpara>
  </section>
