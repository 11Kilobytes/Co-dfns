<listitem xmlns="http://docbook.org/ns/docbook" version="5.0">
  <formalpara>
    <title>Description</title>
    <para>
      The following two programs trigger
      <symbol>INDEX ERROR</symbol>
      messages in the compiler.
    </para>
  </formalpara>
  <programlisting linenumbering="numbered">:Namespace V1:EndNamespace</programlisting>
  <para>Signals an error with the following stack trace:</para>
  <screen>#.CoDfns.ParseExpr[21]*#.CoDfns.ParseLine[51]/#.CoDfns.Parse[145]#.CoDfns.Compile[2]#.CoDfns.Fix[26]</screen>
  <para>And the following program gives a slightly different index error.</para>
  <programlisting linenumbering="numbered">:Namespace V1‚Üê:EndNamespace</programlisting>
  <para>Which errors at ParseExpr[19] with this stack trace:</para>
  <screen>#.CoDfns.ParseExpr[19]*#.CoDfns.ParseExpr[24]#.CoDfns.ParseLine[51]/#.CoDfns.Parse[145]#.CoDfns.Compile[2]#.CoDfns.Fix[26]</screen>
  <formalpara>
    <title>Analysis</title>
    <para>
      In the first case, we incorrectly assume that we will have at least
      two tokens in our token matrix when parsing for an expression. If
      there is only a single token in the token list that we are parsing,
      and that single token is a variable, then the first condition checks
      the second token to determing whether it is an assignment or not.
      However, since there is no second token, this fails with an
      <symbol>INDEX ERROR</symbol>
      . A simple check before this suffices to fix this oversight.
    </para>
  </formalpara>
  <para>
    The same thing happens with the second example, but a little earlier.
    If we have an assignment to a variable that has no expression on the
    right hand side of the assignment, then the
    <function>ParseExpr</function>
    function will be called without any tokens in it. Previously, we assumed
    that we would have at least one token in the matrix, but now we need
    to check to ensure that there is at least one token before checking
    whether that token is a variable on the 19th line of the function body.
  </para>
</listitem>
