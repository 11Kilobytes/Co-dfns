<glosslist xmlns="http://docbook.org/ns/docbook" version="5.0">
  <title>Tasks</title>
  <glossentry>
    <glossterm>Task 1</glossterm>
    <glossdef>
      <formalpara>
        <title>Analyze candidate reused software and its documentation 
        to develop a reengineering plan</title>
        <para>
          Analyze specifications, designs, and implementations of 
          reused software to evaluate the completeness and correctness 
          of documentation of its functional semantics, and the extent
          of reengineering necessary to satisfy software product 
          requirements.
        </para>
      </formalpara>
      <para>
        Analyze the usage models, test plans, test procedures, test
        results, and actual usage of reused software to evaluate the 
        basis for its reliability estimates.
      </para>
      <para>
        Conduct a cost/benefit analysis with respect to project
        certification goals and future software maintenance 
        responsibilities to determine appropriate resource allocations to 
        reengineering activiities.
      </para>
      <para>
        If necessary, develop a plan for reengineering reused software 
        to satisfy functional requirements, recover functional semantics, 
        and/or assess fitness for use.
      </para>
      <para>
        Define and document reengineering tasks, schedules, 
        and resources in the <citetitle>Reengineering Plan</citetitle>
        work product.
      </para>
    </glossdef>
  </glossentry>
  <glossentry>
    <glossterm>Task 2</glossterm>
    <glossdef>
      <formalpara>
        <title>Recover the functional semantics of reused software using 
        function abstraction techniques</title>
        <para>
          If reused software implementations are not structured,
          transform them into structured form using program structuring 
          techniques to permit function abstraction.
        </para>
      </formalpara>
      <para>
        Carry out stepwise abstraction of structured implementations
        as necessary and document embedded intended functions.
        Continue abstraction until specifications of external behavior in 
        all possible circumstances of use have been 
        defined.
      </para>
      <para>
        Document the functional semantics of reused software in 
        the <citetitle>Reengineered Software</citetitle> work product.
      </para>
    </glossdef>
  </glossentry>
  <glossentry>
    <glossterm>Task 3</glossterm>
    <glossdef>
      <formalpara>
        <title>Reengineer reused software to meet software product
        requirements</title>
        <para>
          Respecify, redesign, and reimplement reused software as necessary 
          to meet requirements using the Function Specification, Increment Design,
          and Correctness Verification Processes.
        </para>
      </formalpara>
      <para>
        Document the reengineering of reused software in the 
        <citetitle>Reengineered Software</citetitle> work product.
      </para>
    </glossdef>
  </glossentry>
  <glossentry>
    <glossterm>Task 4</glossterm>
    <glossdef>
      <formalpara>
        <title>Recover the functional semantics of reused software 
        using experimental execution</title>
        <para>
          If the source code of reused software is not available, 
          conduct experimental executions as necessary to derive an 
          understanding of its functional semantics.
        </para>
      </formalpara>
      <para>
        Document the functional semantics of reused software in the 
        <citetitle>Reengineered Software</citetitle> work product.
      </para>
    </glossdef>
  </glossentry>
  <glossentry>
    <glossterm>Task 5</glossterm>
    <glossdef>
      <formalpara>
        <title>Certify the fitness for use of reused software</title>
        <para>
          Create usage models and conduct statistical testing 
          as necessary to certify the fitness for use of reused software with 
          respect to project certification goals. Use the Usage Modeling 
          and Test Planning Process and the Statistical Testing and 
          Certification Process.
        </para>
      </formalpara>
      <para>
        Document certification results in the 
        <citetitle>Reengineered Software</citetitle> work product.
      </para>
    </glossdef>
  </glossentry>
</glosslist>
