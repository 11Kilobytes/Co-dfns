  <section xmlns="http://docbook.org/ns/docbook" version="5.0">
    <title>Analysis: Miscellaneous Observations</title>
    <simpara>
      There is a parsing by twos paper that gives a classic way of
      parsing APL using a two-lookahead table based approach, but
      this approach doesn't scale to the entire system, only smaller
      parts of the system, which we can pretty easily parse
      anyways. Thus, it's not likely to net us very much to go with
      this approach.
    </simpara>
    <simpara>
      Getting an exact 1-1 correspondence in the namespace behavior
      is going to be hard, but I think it can be done. One thing
      that we will have to make sure to realize is that an online
      compiled system is *not* going to be available the next time
      that we run the namespace, so we may have to compile
      namespaces fresh each time unless we have a means of linking
      them in with a static file that is already compiled. There
      might be some way to ensure that we can do the online
      compilation automatically in the presence of such a file.
    </simpara>
    <simpara>
      Since this compiler is meant to be easily extended and
      modified, and this should mean that it is easy to introspect,
      it makes sense to have an easy to way plug in with any given
      pass. If the passes output their languages and accept their
      languages in a format that matches the format of the
      <function>âŽ•XML</function> function, it will be possible to
      easily output XML and read in XML versions of the AST for any
      given element, which makes it easy for other tools and other
      systems to work on and analyze the code. This increases the
      overall usefulness of the compiler significantly.
    </simpara>
  </section>
